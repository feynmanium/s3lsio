var searchIndex = {};
searchIndex["s3lsio"] = {"doc":"","items":[[3,"Error","s3lsio","Allows you to control Error output.",null,null],[12,"format","","Defaults to OutputFormat::serialize since it&#39;s easier to debug.",0,null],[12,"color","","Can be any term color. Defaults to term::color::RED.",0,null],[3,"Output","","Allows you to control non-Error output.",null,null],[12,"format","","Defaults to OutputFormat::plain.",1,null],[12,"color","","Can be any term color. Defaults to term::color::GREEN.",1,null],[3,"Client","","Client structure holds a reference to the S3Client which also implements two traits:\nAwsCredentialsProvider and DispatchSignedRequest\nSince S3Client struct is takes those two traits as parameters then ALL functions called\nthat require passing in S3Client or Client must specify the trait signature as follows:\nExample: fn whatever_function&lt;P: AwsCredentialsProvider, D: DispatchSignedRequest&gt;(client: &amp;mut Client&lt;P,D&gt;)\nNote: Could also specify &#39;where&#39; P:... D:... instead.",null,null],[12,"s3client","","",2,null],[12,"error","","",2,null],[12,"output","","",2,null],[4,"OutputFormat","","Allows you to set the output type for stderr and stdout.",null,null],[13,"json","","",3,null],[13,"plain","","",3,null],[13,"serialize","","",3,null],[13,"none","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null]],"paths":[[3,"Error"],[3,"Output"],[3,"Client"],[4,"OutputFormat"]]};
initSearch(searchIndex);
